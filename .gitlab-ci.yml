image: $CI_REGISTRY_IMAGE
stages:
  - docker-stage
#  - yarn-stage
#  - test
#  - build

docker-job:
  image: registry.gitlab.com/replatf0rm/docker-compose-ci:latest
  stage: docker-stage
  tags:
    - amd64
  services:
    - name: docker:19.03.12-dind
      alias: docker
  variables:
    GIT_DEPTH: 1
    DOCKER_TLS_CERTDIR: "/certs"
    CI: "true"
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker-compose build
    - docker-compose push
    - docker cp $(docker create --rm "$CI_REGISTRY_IMAGE"):/app/out public
    #- docker cp $(docker create --rm "$CI_REGISTRY_IMAGE"):/app/node_modules node_modules
  artifacts:
    paths:
      - public/
#      - node_modules/
#      - .cache/
#      - .next/
  only:
    refs:
      - master
    changes:
      - "docker-compose.yml"
      - "Dockerfile"
      - ".gitlab-ci.yml"
      - ".env-ci"
      - "yarn.lock"

#yarn-job:
#  stage: yarn-stage
#  variables:
#    GIT_DEPTH: 1
#    CI: "true"
#  tags:
#    - amd64
#  script:
#   - yarn install
#  cache:
#    paths:
#      - node_modules
#  only:
#    refs:
#      - tags
#    changes:
#      - "yarn.lock"
#      - ".gitlab-ci.yml"

# test:
#   stage: test
#   tags:
#     - amd64
#   variables:
#     GIT_DEPTH: 1
#     CI: "true"
#   cache:
#     key: $CI_PROJECT_NAME
#     policy: pull-push
#     paths:
#       - .next/
#       - node_modules/
#   script: yarn test
#   only:
#     refs:
#       - master

#pages:
#  stage: build
#  tags:
#    - amd64
#  variables:
#    GIT_DEPTH: 1
#    CI: "true"
#  script:
#    - yarn deploy
#    - mv public/ static/; mv out/ public/
#  cache:
#    key: $CI_PROJECT_NAME
#    policy: pull-push
#    paths:
#      - .next/
#      - node_modules/
#  artifacts:
#    paths:
#      - public/
#  only:
#    refs:
#      - tags
#      - master

